(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["mea-auth-index~mea-complaint-index"],{

/***/ "./node_modules/file-saver/dist/FileSaver.min.js":
/*!*******************************************************!*\
  !*** ./node_modules/file-saver/dist/FileSaver.min.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(global) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function(a,b){if(true)!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (b),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else {}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a, true&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmlsZS1zYXZlci9kaXN0L0ZpbGVTYXZlci5taW4uanM/MjFhNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2SkFBZSxHQUFHLElBQXFDLENBQUMsaUNBQU8sRUFBRSxvQ0FBQyxDQUFDO0FBQUE7QUFBQTtBQUFBLG9HQUFDLENBQUMsS0FBSyxFQUE2RSxDQUFDLGtCQUFrQixhQUFhLGdCQUFnQiwrQkFBK0IsV0FBVyw0RkFBNEYsV0FBVyxrRUFBa0UsNERBQTRELFlBQVksSUFBSSxrQkFBa0IseUJBQXlCLDBEQUEwRCxrQkFBa0Isc0JBQXNCLHlDQUF5QyxVQUFVLGNBQWMseUJBQXlCLG9CQUFvQixJQUFJLFNBQVMsVUFBVSxvQ0FBb0MsY0FBYyxJQUFJLHlDQUF5QyxTQUFTLDBDQUEwQywwRkFBMEYscU9BQXFPLDBEQUEwRCx1REFBdUQsaU5BQWlOLDBCQUEwQiw0QkFBNEIsS0FBSyxLQUFLLGdEQUFnRCxtRkFBbUYsc0JBQXNCLEtBQUssa0NBQWtDLGlEQUFpRCxLQUFLLEdBQUcsbUJBQW1CLDhIQUE4SCxvSUFBb0ksMkNBQTJDLHFCQUFxQix1QkFBdUIsZUFBZSwwQkFBMEIsR0FBRyx3QkFBd0IseUNBQXlDLG9CQUFvQixLQUFLLGdEQUFnRCw0REFBNEQscUJBQXFCLE9BQU8sRUFBRSxvQkFBb0IsS0FBMEIscUJBQXFCOztBQUVuZ0YseUMiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZmlsZS1zYXZlci9kaXN0L0ZpbGVTYXZlci5taW4uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oYSxiKXtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQpZGVmaW5lKFtdLGIpO2Vsc2UgaWYoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGV4cG9ydHMpYigpO2Vsc2V7YigpLGEuRmlsZVNhdmVyPXtleHBvcnRzOnt9fS5leHBvcnRzfX0pKHRoaXMsZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBiKGEsYil7cmV0dXJuXCJ1bmRlZmluZWRcIj09dHlwZW9mIGI/Yj17YXV0b0JvbTohMX06XCJvYmplY3RcIiE9dHlwZW9mIGImJihjb25zb2xlLndhcm4oXCJEZXByZWNhdGVkOiBFeHBlY3RlZCB0aGlyZCBhcmd1bWVudCB0byBiZSBhIG9iamVjdFwiKSxiPXthdXRvQm9tOiFifSksYi5hdXRvQm9tJiYvXlxccyooPzp0ZXh0XFwvXFxTKnxhcHBsaWNhdGlvblxcL3htbHxcXFMqXFwvXFxTKlxcK3htbClcXHMqOy4qY2hhcnNldFxccyo9XFxzKnV0Zi04L2kudGVzdChhLnR5cGUpP25ldyBCbG9iKFtcIlxcdUZFRkZcIixhXSx7dHlwZTphLnR5cGV9KTphfWZ1bmN0aW9uIGMoYixjLGQpe3ZhciBlPW5ldyBYTUxIdHRwUmVxdWVzdDtlLm9wZW4oXCJHRVRcIixiKSxlLnJlc3BvbnNlVHlwZT1cImJsb2JcIixlLm9ubG9hZD1mdW5jdGlvbigpe2EoZS5yZXNwb25zZSxjLGQpfSxlLm9uZXJyb3I9ZnVuY3Rpb24oKXtjb25zb2xlLmVycm9yKFwiY291bGQgbm90IGRvd25sb2FkIGZpbGVcIil9LGUuc2VuZCgpfWZ1bmN0aW9uIGQoYSl7dmFyIGI9bmV3IFhNTEh0dHBSZXF1ZXN0O2Iub3BlbihcIkhFQURcIixhLCExKTt0cnl7Yi5zZW5kKCl9Y2F0Y2goYSl7fXJldHVybiAyMDA8PWIuc3RhdHVzJiYyOTk+PWIuc3RhdHVzfWZ1bmN0aW9uIGUoYSl7dHJ5e2EuZGlzcGF0Y2hFdmVudChuZXcgTW91c2VFdmVudChcImNsaWNrXCIpKX1jYXRjaChjKXt2YXIgYj1kb2N1bWVudC5jcmVhdGVFdmVudChcIk1vdXNlRXZlbnRzXCIpO2IuaW5pdE1vdXNlRXZlbnQoXCJjbGlja1wiLCEwLCEwLHdpbmRvdywwLDAsMCw4MCwyMCwhMSwhMSwhMSwhMSwwLG51bGwpLGEuZGlzcGF0Y2hFdmVudChiKX19dmFyIGY9XCJvYmplY3RcIj09dHlwZW9mIHdpbmRvdyYmd2luZG93LndpbmRvdz09PXdpbmRvdz93aW5kb3c6XCJvYmplY3RcIj09dHlwZW9mIHNlbGYmJnNlbGYuc2VsZj09PXNlbGY/c2VsZjpcIm9iamVjdFwiPT10eXBlb2YgZ2xvYmFsJiZnbG9iYWwuZ2xvYmFsPT09Z2xvYmFsP2dsb2JhbDp2b2lkIDAsYT1mLnNhdmVBc3x8KFwib2JqZWN0XCIhPXR5cGVvZiB3aW5kb3d8fHdpbmRvdyE9PWY/ZnVuY3Rpb24oKXt9OlwiZG93bmxvYWRcImluIEhUTUxBbmNob3JFbGVtZW50LnByb3RvdHlwZT9mdW5jdGlvbihiLGcsaCl7dmFyIGk9Zi5VUkx8fGYud2Via2l0VVJMLGo9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7Zz1nfHxiLm5hbWV8fFwiZG93bmxvYWRcIixqLmRvd25sb2FkPWcsai5yZWw9XCJub29wZW5lclwiLFwic3RyaW5nXCI9PXR5cGVvZiBiPyhqLmhyZWY9YixqLm9yaWdpbj09PWxvY2F0aW9uLm9yaWdpbj9lKGopOmQoai5ocmVmKT9jKGIsZyxoKTplKGosai50YXJnZXQ9XCJfYmxhbmtcIikpOihqLmhyZWY9aS5jcmVhdGVPYmplY3RVUkwoYiksc2V0VGltZW91dChmdW5jdGlvbigpe2kucmV2b2tlT2JqZWN0VVJMKGouaHJlZil9LDRFNCksc2V0VGltZW91dChmdW5jdGlvbigpe2Uoail9LDApKX06XCJtc1NhdmVPck9wZW5CbG9iXCJpbiBuYXZpZ2F0b3I/ZnVuY3Rpb24oZixnLGgpe2lmKGc9Z3x8Zi5uYW1lfHxcImRvd25sb2FkXCIsXCJzdHJpbmdcIiE9dHlwZW9mIGYpbmF2aWdhdG9yLm1zU2F2ZU9yT3BlbkJsb2IoYihmLGgpLGcpO2Vsc2UgaWYoZChmKSljKGYsZyxoKTtlbHNle3ZhciBpPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO2kuaHJlZj1mLGkudGFyZ2V0PVwiX2JsYW5rXCIsc2V0VGltZW91dChmdW5jdGlvbigpe2UoaSl9KX19OmZ1bmN0aW9uKGEsYixkLGUpe2lmKGU9ZXx8b3BlbihcIlwiLFwiX2JsYW5rXCIpLGUmJihlLmRvY3VtZW50LnRpdGxlPWUuZG9jdW1lbnQuYm9keS5pbm5lclRleHQ9XCJkb3dubG9hZGluZy4uLlwiKSxcInN0cmluZ1wiPT10eXBlb2YgYSlyZXR1cm4gYyhhLGIsZCk7dmFyIGc9XCJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW1cIj09PWEudHlwZSxoPS9jb25zdHJ1Y3Rvci9pLnRlc3QoZi5IVE1MRWxlbWVudCl8fGYuc2FmYXJpLGk9L0NyaU9TXFwvW1xcZF0rLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO2lmKChpfHxnJiZoKSYmXCJvYmplY3RcIj09dHlwZW9mIEZpbGVSZWFkZXIpe3ZhciBqPW5ldyBGaWxlUmVhZGVyO2oub25sb2FkZW5kPWZ1bmN0aW9uKCl7dmFyIGE9ai5yZXN1bHQ7YT1pP2E6YS5yZXBsYWNlKC9eZGF0YTpbXjtdKjsvLFwiZGF0YTphdHRhY2htZW50L2ZpbGU7XCIpLGU/ZS5sb2NhdGlvbi5ocmVmPWE6bG9jYXRpb249YSxlPW51bGx9LGoucmVhZEFzRGF0YVVSTChhKX1lbHNle3ZhciBrPWYuVVJMfHxmLndlYmtpdFVSTCxsPWsuY3JlYXRlT2JqZWN0VVJMKGEpO2U/ZS5sb2NhdGlvbj1sOmxvY2F0aW9uLmhyZWY9bCxlPW51bGwsc2V0VGltZW91dChmdW5jdGlvbigpe2sucmV2b2tlT2JqZWN0VVJMKGwpfSw0RTQpfX0pO2Yuc2F2ZUFzPWEuc2F2ZUFzPWEsXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZSYmKG1vZHVsZS5leHBvcnRzPWEpfSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZpbGVTYXZlci5taW4uanMubWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/file-saver/dist/FileSaver.min.js\n");

/***/ }),

/***/ "./resources/js/mixins/issue-report-mixin.js":
/*!***************************************************!*\
  !*** ./resources/js/mixins/issue-report-mixin.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(moment, _) {/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! file-saver */ \"./node_modules/file-saver/dist/FileSaver.min.js\");\n/* harmony import */ var file_saver__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(file_saver__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _vuexable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vuexable */ \"./resources/js/mixins/vuexable.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers */ \"./resources/js/helpers.js\");\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nvar IssueReportMixin = {\n  mixins: [_vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuexable\"]],\n  computed: {\n    $_issue_report_mixin_report: function $_issue_report_mixin_report() {\n      return this.$_vuexable_getState(\"report\", _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].modules.ISSUE) || {};\n    },\n    $_issue_report_mixin_reportTypes: function $_issue_report_mixin_reportTypes() {\n      var _this$$_issue_report_ = this.$_issue_report_mixin_report.types,\n          types = _this$$_issue_report_ === void 0 ? [] : _this$$_issue_report_;\n      return types;\n    },\n    $_issue_report_mixin_reportType: {\n      get: function get() {\n        var _this$$_issue_report_2 = this.$_issue_report_mixin_report.reportType,\n            reportType = _this$$_issue_report_2 === void 0 ? \"date\" : _this$$_issue_report_2;\n        return reportType;\n      },\n      set: function set(reportType) {\n        this.$_vuexable_setState({\n          key: \"report\",\n          value: _objectSpread({}, this.$_issue_report_mixin_report, {\n            reportType: reportType\n          })\n        }, _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].modules.ISSUE);\n      }\n    },\n    $_issue_report_mixin_isTypeDate: function $_issue_report_mixin_isTypeDate() {\n      return this.$_issue_report_mixin_reportType === \"date\";\n    },\n    $_issue_report_mixin_reportVModel: {\n      get: function get() {\n        var data = this.$_issue_report_mixin_isTypeDate ? \"dates\" : \"months\";\n        return this.$_issue_report_mixin_report[data] || [];\n      },\n      set: function set(v) {\n        var data = this.$_issue_report_mixin_isTypeDate ? \"dates\" : \"months\";\n        this.$_vuexable_setState({\n          key: \"report\",\n          value: _objectSpread({}, this.$_issue_report_mixin_report, _defineProperty({}, data, v))\n        }, _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].modules.ISSUE);\n      }\n    },\n    $_issue_report_mixin_reportGenerate: {\n      get: function get() {\n        var _this$$_issue_report_3 = this.$_issue_report_mixin_report.generate,\n            generate = _this$$_issue_report_3 === void 0 ? false : _this$$_issue_report_3;\n        return generate;\n      },\n      set: function set(generate) {\n        this.$_vuexable_setState({\n          key: \"report\",\n          value: _objectSpread({}, this.$_issue_report_mixin_report, {\n            generate: generate\n          })\n        }, _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].modules.ISSUE);\n      }\n    },\n    $_issue_report_mixin_reportDialog: {\n      get: function get() {\n        var _this$$_issue_report_4 = this.$_issue_report_mixin_report.dialog,\n            dialog = _this$$_issue_report_4 === void 0 ? false : _this$$_issue_report_4;\n        return dialog;\n      },\n      set: function set(dialog) {\n        this.$_vuexable_setState({\n          key: \"report\",\n          value: _objectSpread({}, this.$_issue_report_mixin_report, {\n            dialog: dialog\n          })\n        }, _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].modules.ISSUE);\n      }\n    }\n  },\n  methods: _objectSpread({}, _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].mapWaitingActions(_vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].modules.ISSUE, [_vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].actions.ISSUE.EXPORT, _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].actions.ISSUE.EXPORT_SEARCH]), {\n    $_issue_report_mixin_switchType: function $_issue_report_mixin_switchType() {\n      if (this.$_issue_report_mixin_isTypeDate) {\n        this.$_issue_report_mixin_reportType = 'month';\n      } else {\n        this.$_issue_report_mixin_reportType = 'date';\n      }\n    },\n    $_issue_report_mixin_generateCurrentSelected: function () {\n      var _$_issue_report_mixin_generateCurrentSelected = _asyncToGenerator(\n      /*#__PURE__*/\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n        var filter_groups, pagination, selected, selectAll, selectedIds, id, isSelected, sort;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                filter_groups = this.$_vuexable_getState(\"filter_groups\", _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].modules.ISSUE);\n                pagination = this.$_vuexable_getState(\"pagination\", _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].modules.ISSUE);\n                selected = this.$_vuexable_getState(\"selected\", _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].modules.ISSUE);\n                selectAll = this.$_vuexable_getState(\"selectAll\", _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].modules.ISSUE);\n\n                if (!selectAll) {\n                  selectedIds = [];\n\n                  for (id in selected) {\n                    if (selected.hasOwnProperty(id)) {\n                      isSelected = selected[id];\n\n                      if (isSelected) {\n                        selectedIds.push(id);\n                      }\n                    }\n                  }\n\n                  filter_groups = [{\n                    filters: [Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"filterIn\"])(\"id\", selectedIds)]\n                  }];\n                }\n\n                sort = pagination.sortBy;\n\n                if (pagination.descending) {\n                  sort = \"-\".concat(sort);\n                }\n\n                this.$_issue_report_mixin_export(filter_groups, {\n                  action: _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].actions.ISSUE.EXPORT_SEARCH,\n                  sort: [sort]\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function $_issue_report_mixin_generateCurrentSelected() {\n        return _$_issue_report_mixin_generateCurrentSelected.apply(this, arguments);\n      }\n\n      return $_issue_report_mixin_generateCurrentSelected;\n    }(),\n    $_issue_report_mixin_generateCurrentFilter: function () {\n      var _$_issue_report_mixin_generateCurrentFilter = _asyncToGenerator(\n      /*#__PURE__*/\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {\n        var filter_groups, pagination, sort;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                filter_groups = this.$_vuexable_getState(\"filter_groups\", _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].modules.ISSUE);\n                pagination = this.$_vuexable_getState(\"pagination\", _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].modules.ISSUE);\n                sort = pagination.sortBy;\n\n                if (pagination.descending) {\n                  sort = \"-\".concat(sort);\n                }\n\n                this.$_issue_report_mixin_export(filter_groups, {\n                  action: _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].actions.ISSUE.EXPORT_SEARCH,\n                  sort: [sort]\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function $_issue_report_mixin_generateCurrentFilter() {\n        return _$_issue_report_mixin_generateCurrentFilter.apply(this, arguments);\n      }\n\n      return $_issue_report_mixin_generateCurrentFilter;\n    }(),\n    $_issue_report_mixin_generateThisWeekReport: function () {\n      var _$_issue_report_mixin_generateThisWeekReport = _asyncToGenerator(\n      /*#__PURE__*/\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {\n        var startOfWeek, endOfWeek, ranges, day, fileName;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                startOfWeek = moment().startOf('isoWeek');\n                endOfWeek = moment().endOf('isoWeek');\n                ranges = [];\n                day = startOfWeek;\n\n                while (day <= endOfWeek) {\n                  ranges.push(day.format(\"YYYY-MM-DD\").toString());\n                  day = day.clone().add(1, 'd');\n                }\n\n                fileName = \"ComplaintWeeklyReport_\".concat(ranges[0], \"_\").concat(ranges[ranges.length - 1]);\n                _context3.next = 8;\n                return this.$_issue_report_mixin_generateReport(ranges, fileName);\n\n              case 8:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function $_issue_report_mixin_generateThisWeekReport() {\n        return _$_issue_report_mixin_generateThisWeekReport.apply(this, arguments);\n      }\n\n      return $_issue_report_mixin_generateThisWeekReport;\n    }(),\n    $_issue_report_mixin_generateThisMonthReport: function () {\n      var _$_issue_report_mixin_generateThisMonthReport = _asyncToGenerator(\n      /*#__PURE__*/\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4() {\n        var yearMonth, fileName;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                yearMonth = moment().format(\"YYYY-MM\").toString();\n                fileName = \"ComplaintMonthlyReport_\".concat(yearMonth);\n                _context4.next = 4;\n                return this.$_issue_report_mixin_generateReport([yearMonth], fileName);\n\n              case 4:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function $_issue_report_mixin_generateThisMonthReport() {\n        return _$_issue_report_mixin_generateThisMonthReport.apply(this, arguments);\n      }\n\n      return $_issue_report_mixin_generateThisMonthReport;\n    }(),\n    $_issue_report_mixin_generateReport: function () {\n      var _$_issue_report_mixin_generateReport = _asyncToGenerator(\n      /*#__PURE__*/\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee5(ranges) {\n        var fileName,\n            filter_groups,\n            _args5 = arguments;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                fileName = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : null;\n                filter_groups = [{\n                  filters: ranges.map(function (range) {\n                    return Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"filterContains\"])(\"created_at\", range);\n                  }),\n                  or: true\n                }];\n                return _context5.abrupt(\"return\", this.$_issue_report_mixin_export(filter_groups, {\n                  fileName: fileName\n                }));\n\n              case 3:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function $_issue_report_mixin_generateReport(_x) {\n        return _$_issue_report_mixin_generateReport.apply(this, arguments);\n      }\n\n      return $_issue_report_mixin_generateReport;\n    }(),\n    $_issue_report_mixin_export: function () {\n      var _$_issue_report_mixin_export = _asyncToGenerator(\n      /*#__PURE__*/\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee6() {\n        var filter_groups,\n            _ref,\n            _ref$fileName,\n            fileName,\n            _ref$action,\n            action,\n            _ref$sort,\n            sort,\n            content,\n            currentDate,\n            _args6 = arguments;\n\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                filter_groups = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : [];\n                _ref = _args6.length > 1 ? _args6[1] : undefined, _ref$fileName = _ref.fileName, fileName = _ref$fileName === void 0 ? null : _ref$fileName, _ref$action = _ref.action, action = _ref$action === void 0 ? _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].actions.ISSUE.EXPORT : _ref$action, _ref$sort = _ref.sort, sort = _ref$sort === void 0 ? [\"-updated_at\"] : _ref$sort;\n                this.$_issue_report_mixin_reportDialog = false;\n                this.$_issue_report_mixin_reportGenerate = true;\n                _context6.prev = 4;\n                _context6.next = 7;\n                return this[action]({\n                  filter_groups: filter_groups,\n                  sort: sort\n                });\n\n              case 7:\n                content = _context6.sent;\n                _context6.next = 13;\n                break;\n\n              case 10:\n                _context6.prev = 10;\n                _context6.t0 = _context6[\"catch\"](4);\n                throw _context6.t0;\n\n              case 13:\n                currentDate = new Date();\n                fileName = !_.isNull(fileName) ? fileName : \"ComplaintReport_\".concat(Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"formatDateFile\"])(currentDate));\n                file_saver__WEBPACK_IMPORTED_MODULE_1___default.a.saveAs(content.data, fileName);\n                this.$_issue_report_mixin_reportGenerate = false;\n\n              case 17:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[4, 10]]);\n      }));\n\n      function $_issue_report_mixin_export() {\n        return _$_issue_report_mixin_export.apply(this, arguments);\n      }\n\n      return $_issue_report_mixin_export;\n    }()\n  }),\n  mounted: function mounted() {\n    if (!Object.keys(this.$_issue_report_mixin_report).length) {\n      this.$_vuexable_setState({\n        key: \"report\",\n        value: {\n          reportType: \"date\",\n          types: [{\n            label: \"Month\",\n            value: \"month\"\n          }, {\n            label: \"Date\",\n            value: \"date\"\n          }],\n          dates: [],\n          months: [],\n          dialog: false,\n          generate: false\n        }\n      }, _vuexable__WEBPACK_IMPORTED_MODULE_2__[\"vuex\"].modules.ISSUE);\n    }\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (IssueReportMixin);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! moment */ \"./node_modules/moment/moment.js\"), __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/mixins/issue-report-mixin.js\n");

/***/ }),

/***/ "./resources/js/mixins/issue-search-mixin.js":
/*!***************************************************!*\
  !*** ./resources/js/mixins/issue-search-mixin.js ***!
  \***************************************************/
/*! exports provided: SEARCH_FIELDS, issueSearchMixin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(_) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SEARCH_FIELDS\", function() { return SEARCH_FIELDS; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"issueSearchMixin\", function() { return issueSearchMixin; });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _vuexable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vuexable */ \"./resources/js/mixins/vuexable.js\");\n/* harmony import */ var _issue_report_mixin__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./issue-report-mixin */ \"./resources/js/mixins/issue-report-mixin.js\");\n/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers */ \"./resources/js/helpers.js\");\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants */ \"./resources/js/constants/index.js\");\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nvar SEARCH_FIELDS = [\"issuer\", \"recipients\", \"subject\", \"latest_status\", \"description\", \"created_at\"];\nvar issueSearchMixin = {\n  mixins: [_vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuexable\"], _issue_report_mixin__WEBPACK_IMPORTED_MODULE_2__[\"default\"]],\n  data: function data() {\n    return {\n      issue_search_mixin_dateMenu: false,\n      issue_search_mixin_searchKeyword: this.$route.query.q || \"\",\n      issue_search_mixin_form: _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].models.FORM.make({\n        from: [],\n        to: [],\n        subject: \"\",\n        include_words: \"\",\n        exclude_words: \"\",\n        dates: [],\n        categories: [],\n        statuses: [],\n        has_attachment: false\n      })\n    };\n  },\n  computed: _objectSpread({}, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].mapWaitingGetters({\n    $_issue_search_mixin_isFetchingFormRecipient: \"issueSearchMixin@fetchRecipients\",\n    $_issue_search_mixin_isFetchingFormCategory: \"issueSearchMixin@fetchIssueCategories\",\n    $_issue_search_mixin_isSearchingComplaint: \"issueSearchMixin@searchComplaint\",\n    $_issue_search_mixin_isFetchingFormStatus: \"issueSearchMixin@fetchIssueStatuses\"\n  }), {\n    $_issue_search_mixin_storeRecipients: function $_issue_search_mixin_storeRecipients() {\n      var recipients = this.$_vuexable_getter(_vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].getters.SORTED_VALUES, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.GROUP);\n      return _.map(recipients, \"name\"); // return mapTextValue(recipients, \"name\", \"id\");\n    },\n    $_issue_search_mixin_storeStatuses: function $_issue_search_mixin_storeStatuses() {\n      var statuses = this.$_vuexable_getter(_vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].getters.SORTED_VALUES, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE_STATUS);\n      return _.map(statuses, \"status\");\n    },\n    $_issue_search_mixin_storeCategories: function $_issue_search_mixin_storeCategories() {\n      var statuses = this.$_vuexable_getter(_vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].getters.SORTED_VALUES, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE_CATEGORY);\n      return _.map(statuses, \"category\");\n    },\n    $_issue_search_mixin_calendarIcon: function $_issue_search_mixin_calendarIcon() {\n      return this.$_issue_report_mixin_reportType === \"date\" ? \"mdi-calendar-month\" : \"mdi-calendar-today\";\n    },\n    $_issue_search_mixin_calendarTooltip: function $_issue_search_mixin_calendarTooltip() {\n      return \"Switch to select by \".concat(this.$_issue_report_mixin_reportType === \"date\" ? \"month\" : \"date\");\n    },\n    $_issue_search_mixin_textFieldLabel: function $_issue_search_mixin_textFieldLabel() {\n      return _.capitalize(this.$_issue_report_mixin_reportType);\n    },\n    $_issue_search_mixin_textFieldKey: function $_issue_search_mixin_textFieldKey() {\n      var base = \"textField\";\n\n      if (this.$_issue_report_mixin_reportType) {\n        base += \"--\".concat(this.$_issue_report_mixin_reportType);\n      }\n\n      return base;\n    },\n    $_issue_search_mixin_searchFilters: function $_issue_search_mixin_searchFilters() {\n      var filter_groups = [];\n      var filters = [];\n\n      if (this.issue_search_mixin_form.from.length) {\n        filters.push(Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"filterIn\"])(\"issuer\", this.issue_search_mixin_form.from));\n      } // if (this.issue_search_mixin_form.to.length) {\n      //     this.issue_search_mixin_form.to.forEach(recipient => {\n      //         filters.push(filterContains(\"recipients\", recipient));\n      //     });\n      //     // filters.push(filterIn(\"recipients\", this.issue_search_mixin_form.to));\n      // }\n\n\n      if (this.issue_search_mixin_form.statuses.length) {\n        filters.push(Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"filterIn\"])(\"latest_status\", this.issue_search_mixin_form.statuses));\n      }\n\n      if (this.issue_search_mixin_form.categories.length) {\n        filters.push(Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"filterIn\"])(\"category\", this.issue_search_mixin_form.categories));\n      }\n\n      if (this.issue_search_mixin_form.subject.length) {\n        var subject_words = this.issue_search_mixin_form.subject.split(/[\\s,=:./-]/);\n        subject_words.forEach(function (word) {\n          filters.push(Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"filterContains\"])(\"subject\", word));\n        });\n      }\n\n      if (this.issue_search_mixin_form.include_words.length) {\n        var include_words = this.issue_search_mixin_form.include_words.split(/[\\s,=:./-]/);\n        include_words.forEach(function (word) {\n          filters.push(Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"filterContains\"])(\"description\", word));\n        });\n      }\n\n      if (this.issue_search_mixin_form.exclude_words.length) {\n        var exclude_words = this.issue_search_mixin_form.exclude_words.split(/[\\s,=:./-]/);\n        exclude_words.forEach(function (word) {\n          filters.push(Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"filterNotContains\"])(\"description\", word));\n        });\n      }\n\n      if (this.issue_search_mixin_form.dates.length) {\n        this.issue_search_mixin_form.dates.forEach(function (date) {\n          filters.push(Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"filterContains\"])(\"created_at\", date));\n        });\n      }\n\n      if (this.issue_search_mixin_form.to.length) {\n        this.issue_search_mixin_form.to.forEach(function (recipient) {\n          var temp = filters;\n          temp.push(Object(_helpers__WEBPACK_IMPORTED_MODULE_3__[\"filterContains\"])(\"recipients\", recipient));\n          filter_groups.push({\n            filters: [].concat(temp),\n            or: true\n          });\n        }); // filters.push(filterIn(\"recipients\", this.issue_search_mixin_form.to));\n      }\n\n      if (filters.length) {\n        filter_groups.push({\n          filters: filters\n        });\n      }\n\n      return filter_groups;\n    },\n    $_issue_search_mixin_searchFiltersKeyword: function $_issue_search_mixin_searchFiltersKeyword() {\n      var keywords = [];\n\n      if (this.issue_search_mixin_form.from.length) {\n        keywords.push(this.$_issue_search_mixin_makeKeyword(\"from\", function (res, word) {\n          res += word;\n          return res;\n        }, this.issue_search_mixin_form.from)); // keywords.push(\n        //     this.$_issue_search_mixin_makeGroupKeyword(\n        //         \"from\",\n        //         this.issue_search_mixin_form.from\n        //     )\n        // );\n      }\n\n      if (this.issue_search_mixin_form.to.length) {\n        keywords.push(this.$_issue_search_mixin_makeKeyword(\"to\", function (res, word) {\n          res += word;\n          return res;\n        }, this.issue_search_mixin_form.to)); // keywords.push(\n        //     this.$_issue_search_mixin_makeGroupKeyword(\n        //         \"to\",\n        //         this.issue_search_mixin_form.to\n        //     )\n        // );\n      }\n\n      if (this.issue_search_mixin_form.statuses.length) {\n        keywords.push(this.$_issue_search_mixin_makeKeyword(\"status\", function (res, word) {\n          res += word;\n          return res;\n        }, this.issue_search_mixin_form.statuses));\n      }\n\n      if (this.issue_search_mixin_form.categories.length) {\n        keywords.push(this.$_issue_search_mixin_makeKeyword(\"category\", function (res, word) {\n          res += word;\n          return res;\n        }, this.issue_search_mixin_form.categories));\n      }\n\n      if (this.issue_search_mixin_form.subject.length) {\n        // const subject_words = this.issue_search_mixin_form.subject.split(/[\\s,=:./-]/);\n        keywords.push(this.$_issue_search_mixin_makeKeyword(\"subject\", function (res, word) {\n          res += word;\n          return res;\n        }, [this.issue_search_mixin_form.subject]));\n      }\n\n      if (this.issue_search_mixin_form.include_words.length) {\n        var include_words = this.issue_search_mixin_form.include_words.split(/[\\s,=:./-]/);\n        keywords.push(this.$_issue_search_mixin_makeKeyword(\"has-the-words\", function (res, word) {\n          res += word;\n          return res;\n        }, include_words));\n      }\n\n      if (this.issue_search_mixin_form.exclude_words.length) {\n        var exclude_words = this.issue_search_mixin_form.exclude_words.split(/[\\s,=:./-]/);\n        keywords.push(this.$_issue_search_mixin_makeKeyword(\"doesnt-have\", function (res, word) {\n          res += word;\n          return res;\n        }, exclude_words));\n      }\n\n      if (this.issue_search_mixin_form.dates.length) {\n        keywords.push(this.$_issue_search_mixin_makeKeyword(this.$_issue_report_mixin_reportType, function (res, word) {\n          res += word;\n          return res;\n        }, this.issue_search_mixin_form.dates));\n      }\n\n      return keywords.join(\" \");\n    },\n    $_issue_search_mixin_searchFiltersVuex: function $_issue_search_mixin_searchFiltersVuex() {\n      return this.$_vuexable_getState(\"filter_groups\", _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE);\n    },\n    $_issue_search_mixin_filtered: function $_issue_search_mixin_filtered() {\n      return this.$_issue_search_mixin_searchFilters.length > 0 && this.$_issue_search_mixin_searchFiltersVuex.length;\n    },\n    $_issue_search_mixin_stateSearchKeyword: function $_issue_search_mixin_stateSearchKeyword() {\n      return this.$_vuexable_getState(\"searchKeyword\", _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE);\n    },\n    $_issue_search_mixin_stateBackupFormdata: function $_issue_search_mixin_stateBackupFormdata() {\n      return this.$_vuexable_getState(\"backupFormdata\", _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE);\n    }\n  }),\n  methods: _objectSpread({}, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].mapWaitingActions(_vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE, {\n    $_issue_search_mixin_searchComplaint: {\n      action: _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].actions.ISSUE.SEARCH,\n      loader: \"issueSearchMixin@searchComplaint\"\n    }\n  }), _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].mapWaitingActions(_vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.GROUP, {\n    $_issue_search_mixin_fetchRecipients: {\n      action: _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].actions.GROUP.FETCH,\n      loader: \"issueSearchMixin@fetchRecipients\"\n    }\n  }), _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].mapWaitingActions(_vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE_STATUS, {\n    $_issue_search_mixin_fetchStatuses: {\n      action: _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].actions.ISSUE_STATUS.FETCH,\n      loader: \"issueSearchMixin@fetchIssueStatuses\"\n    }\n  }), _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].mapWaitingActions(_vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE_CATEGORY, {\n    $_issue_search_mixin_fetchIssueCategories: {\n      action: _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].actions.ISSUE_CATEGORY.FETCH,\n      loader: \"issueSearchMixin@fetchIssueCategories\"\n    }\n  }), {\n    $_issue_search_mixin_onSwitchDateType: function $_issue_search_mixin_onSwitchDateType() {\n      var _this = this;\n\n      this.$_issue_report_mixin_switchType();\n      this.issue_search_mixin_dateMenu = false;\n      setTimeout(function () {\n        _this.issue_search_mixin_dateMenu = true;\n      }, 200);\n    },\n    $_issue_search_mixin_fetchRecipient: function () {\n      var _$_issue_search_mixin_fetchRecipient = _asyncToGenerator(\n      /*#__PURE__*/\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n        var response, filters, select, sort;\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                filters = {}, select = [\"groups:id,name\"], sort = [\"name\"];\n                _context.prev = 1;\n                _context.next = 4;\n                return this.$_issue_search_mixin_fetchRecipients({\n                  filters: filters,\n                  select: select,\n                  sort: sort\n                });\n\n              case 4:\n                response = _context.sent;\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                throw _context.t0;\n\n              case 10:\n                return _context.abrupt(\"return\", response);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 7]]);\n      }));\n\n      function $_issue_search_mixin_fetchRecipient() {\n        return _$_issue_search_mixin_fetchRecipient.apply(this, arguments);\n      }\n\n      return $_issue_search_mixin_fetchRecipient;\n    }(),\n    $_issue_search_mixin_clearState: function $_issue_search_mixin_clearState() {\n      this.$_vuexable_setState({\n        key: \"searchKeyword\",\n        value: \"\"\n      }, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE);\n      this.$_vuexable_setState({\n        key: \"backupFormdata\",\n        value: {}\n      }, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE);\n    },\n    $_issue_search_mixin_onSearch: function () {\n      var _$_issue_search_mixin_onSearch = _asyncToGenerator(\n      /*#__PURE__*/\n      _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {\n        var issue_search_mixin_searchKeyword, issue_search_mixin_form, _this$$_issue_search_, $_issue_search_mixin_searchFilters, response;\n\n        return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.$_issue_search_mixin_updateSearchKeyword();\n                issue_search_mixin_searchKeyword = this.issue_search_mixin_searchKeyword, issue_search_mixin_form = this.issue_search_mixin_form, _this$$_issue_search_ = this.$_issue_search_mixin_searchFilters, $_issue_search_mixin_searchFilters = _this$$_issue_search_ === void 0 ? [] : _this$$_issue_search_;\n\n                if (!$_issue_search_mixin_searchFilters.length && !issue_search_mixin_searchKeyword.length) {\n                  this.$emit(\"alert:invalidSearchForm\");\n                }\n\n                if ($_issue_search_mixin_searchFilters.length) {\n                  this.$_vuexable_updatePagination({\n                    key: \"search\",\n                    value: {\n                      keyword: \"\",\n                      fields: []\n                    }\n                  }, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE);\n                  this.$_vuexable_setState({\n                    key: \"backupFormdata\",\n                    value: _.cloneDeep(issue_search_mixin_form.data)\n                  }, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE);\n                } else {\n                  this.$_vuexable_updatePagination({\n                    key: \"search\",\n                    value: {\n                      keyword: issue_search_mixin_searchKeyword,\n                      fields: SEARCH_FIELDS\n                    }\n                  }, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE);\n                }\n\n                this.$_vuexable_setState({\n                  key: \"filter_groups\",\n                  value: $_issue_search_mixin_searchFilters\n                }, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE);\n                _context2.prev = 5;\n                _context2.next = 8;\n                return this.$_issue_search_mixin_searchComplaint();\n\n              case 8:\n                response = _context2.sent;\n                _context2.next = 15;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](5);\n                this.$emit(\"alert:searchError\");\n                throw _context2.t0;\n\n              case 15:\n                this.$_issue_search_mixin_updateRoute();\n                return _context2.abrupt(\"return\", response);\n\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 11]]);\n      }));\n\n      function $_issue_search_mixin_onSearch() {\n        return _$_issue_search_mixin_onSearch.apply(this, arguments);\n      }\n\n      return $_issue_search_mixin_onSearch;\n    }(),\n    $_issue_search_mixin_extractSearchKeywordToFilters: function $_issue_search_mixin_extractSearchKeywordToFilters() {\n      var _this$issue_search_mi = this.issue_search_mixin_searchKeyword,\n          issue_search_mixin_searchKeyword = _this$issue_search_mi === void 0 ? \"\" : _this$issue_search_mi;\n      this.$_issue_search_mixin_clearSearchFilters();\n      if (!issue_search_mixin_searchKeyword.length) return;\n      var regex = /([\\w-]+):\\(([0-9A-Za-zก-๙-!$%^&*()_+|~=`{}\\[\\]\";'<>?,.\\/\\s]+)\\)/gm;\n      var m;\n\n      while ((m = regex.exec(issue_search_mixin_searchKeyword)) !== null) {\n        // This is necessary to avoid infinite loops with zero-width matches\n        if (m.index === regex.lastIndex) {\n          regex.lastIndex++;\n        } // The result can be accessed through the `m`-variable.\n\n\n        if (m.length) {\n          // const fullMatch = m[0];\n          var key = m[1];\n          var value = m[2]; // const replacedValue = value.replace(/[,\\s]+/gm, \" \");\n          // const splittedValue = value.split(/[,\\s]+/gm);\n\n          switch (key) {\n            case \"from\":\n              this.issue_search_mixin_form.set(\"from\", value.split(/[,\\s]+/gm));\n              break;\n\n            case \"to\":\n              this.issue_search_mixin_form.set(\"to\", value.split(/[,\\s]+/gm));\n              break;\n\n            case \"status\":\n              this.issue_search_mixin_form.set(\"statuses\", value.split(/[,\\s]+/gm));\n              break;\n\n            case \"category\":\n              this.issue_search_mixin_form.set(\"categories\", value.split(/[,\\s]+/gm));\n              break;\n\n            case \"subject\":\n              this.issue_search_mixin_form.set(\"subject\", value);\n              break;\n\n            case \"has-the-words\":\n              this.issue_search_mixin_form.set(\"include_words\", value.replace(/[,\\s]+/gm, \" \"));\n              break;\n\n            case \"doesnt-have\":\n              this.issue_search_mixin_form.set(\"exclude_words\", value.replace(/[,\\s]+/gm, \" \"));\n              break;\n\n            case \"month\":\n              this.issue_search_mixin_form.set(\"dates\", value.split(/[,\\s]+/gm));\n              break;\n\n            case \"date\":\n              this.issue_search_mixin_form.set(\"dates\", value.split(/[,\\s]+/gm));\n              break;\n\n            default:\n              break;\n          } // if (this.form.has(key))\n\n        } // m.forEach((match, groupIndex) => {\n        //     console.log(match);\n        //     console.log(`Found match, group ${groupIndex}: ${match}`);\n        // });\n\n      }\n    },\n    $_issue_search_mixin_updateSearchKeyword: function $_issue_search_mixin_updateSearchKeyword() {\n      var _this$$_issue_search_2 = this.$_issue_search_mixin_searchFiltersKeyword,\n          $_issue_search_mixin_searchFiltersKeyword = _this$$_issue_search_2 === void 0 ? \"\" : _this$$_issue_search_2;\n      this.issue_search_mixin_searchKeyword = $_issue_search_mixin_searchFiltersKeyword;\n      this.$_vuexable_setState({\n        key: \"searchKeyword\",\n        value: this.issue_search_mixin_searchKeyword\n      }, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE);\n    },\n    $_issue_search_mixin_clearSearchFilters: function $_issue_search_mixin_clearSearchFilters() {\n      this.issue_search_mixin_form = _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].models.FORM.make({\n        from: [],\n        to: [],\n        latest_status: [],\n        subject: \"\",\n        include_words: \"\",\n        exclude_words: \"\",\n        dates: [],\n        categories: [],\n        statuses: [],\n        has_attachment: false\n      });\n    },\n    $_issue_search_mixin_clearSearchKeyword: function $_issue_search_mixin_clearSearchKeyword() {\n      this.issue_search_mixin_searchKeyword = \"\";\n    },\n    $_issue_search_mixin_updateRoute: function $_issue_search_mixin_updateRoute() {\n      var pagination = this.$_vuexable_getState(\"pagination\", _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE);\n      this.$router.push({\n        name: _constants__WEBPACK_IMPORTED_MODULE_4__[\"views\"].ISSUE.INDEX,\n        query: _objectSpread({}, this.$route.query, {\n          q: this.issue_search_mixin_searchKeyword // page: pagination.page,\n          // descending: pagination.descending\n\n        })\n      });\n    },\n    $_issue_search_mixin_updateKeywordAndBackup: function $_issue_search_mixin_updateKeywordAndBackup() {\n      var $_issue_search_mixin_stateSearchKeyword = this.$_issue_search_mixin_stateSearchKeyword,\n          $_issue_search_mixin_stateBackupFormdata = this.$_issue_search_mixin_stateBackupFormdata,\n          _this$$_issue_search_3 = this.$_issue_search_mixin_searchFilters,\n          $_issue_search_mixin_searchFilters = _this$$_issue_search_3 === void 0 ? [] : _this$$_issue_search_3;\n\n      if ($_issue_search_mixin_stateSearchKeyword && $_issue_search_mixin_stateSearchKeyword.length) {\n        this.issue_search_mixin_searchKeyword = $_issue_search_mixin_stateSearchKeyword;\n      }\n\n      if ($_issue_search_mixin_searchFilters.length && $_issue_search_mixin_stateBackupFormdata && Object.keys($_issue_search_mixin_stateBackupFormdata).length) {\n        this.issue_search_mixin_form = _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].models.FORM.make(_objectSpread({}, $_issue_search_mixin_stateBackupFormdata));\n      }\n    },\n    $_issue_search_mixin_makeGroupKeyword: function $_issue_search_mixin_makeGroupKeyword(prefix) {\n      var _this2 = this;\n\n      var ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      return this.$_issue_search_mixin_makeKeyword(prefix, function (res, groupId) {\n        var group = _this2.$_vuexable_getByKey(groupId, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.GROUP);\n\n        res += group.name || \"\";\n        return res;\n      }, ids);\n    },\n    $_issue_search_mixin_makeKeyword: function $_issue_search_mixin_makeKeyword(prefix, cb) {\n      var arr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      return arr.reduce(function (res, item, index) {\n        res = cb(res, item, index);\n\n        if (index !== arr.length - 1) {\n          res += \",\";\n        }\n\n        return res;\n      }, \"\".concat(prefix, \":(\")) + \")\";\n    }\n  }),\n  mounted: function mounted() {\n    var $_issue_search_mixin_stateSearchKeyword = this.$_issue_search_mixin_stateSearchKeyword,\n        $_issue_search_mixin_stateBackupFormdata = this.$_issue_search_mixin_stateBackupFormdata;\n\n    if ($_issue_search_mixin_stateSearchKeyword === undefined) {\n      console.log(\"IssueSearchMixin: add state 'searchKeyword'\");\n      this.$_vuexable_setState({\n        key: \"searchKeyword\",\n        value: \"\"\n      }, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE);\n    }\n\n    if ($_issue_search_mixin_stateBackupFormdata === undefined) {\n      console.log(\"IssueSearchMixin: add state 'backupFormdata'\");\n      this.$_vuexable_setState({\n        key: \"backupFormdata\",\n        value: {}\n      }, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE);\n    }\n\n    if (this.issue_search_mixin_searchKeyword.length) {\n      this.$_issue_search_mixin_extractSearchKeywordToFilters();\n      this.$_issue_search_mixin_updateSearchKeyword();\n      this.$_vuexable_setState({\n        key: \"filter_groups\",\n        value: this.$_issue_search_mixin_searchFilters\n      }, _vuexable__WEBPACK_IMPORTED_MODULE_1__[\"vuex\"].modules.ISSUE);\n    }\n  }\n};\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/mixins/issue-search-mixin.js\n");

/***/ })

}]);